{"version":3,"sources":["scenes/level2.ts"],"names":[],"mappings":"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","file":"scenes/level2.js","sourcesContent":["// LEVEL 1 SCENE\r\nmodule scenes {\r\n    export class Level2 extends objects.Scene {\r\n        //PRIVATE INSTANCE VARIABLES ++++++++++++\r\n        //Scene- - - - - - - - - - - - - - - \r\n        private _background1: objects.World;\r\n        private _background2: objects.World;\r\n        \r\n        //non-Player- - - - - - - - - - - - - - -\r\n        private _batarangs: objects.Batarang[];\r\n        private _batarangCount: number;\r\n        \r\n        private _spikes: objects.Spikes[];\r\n        private _spikeCount: number;\r\n        \r\n        //plater- - - - - - - - - - - - - - - - - -\r\n        private _player: objects.Player;\r\n        //other- -- - - - - - - - - - - - - - - - \r\n        private _collision: managers.Collision;\r\n        private _enemyCollision: managers.EnemyCollision[];\r\n        private _spikeCollision: managers.EnemyCollision[];\r\n        private _scoreLabel: objects.Label;\r\n        //private _lives: number;\r\n        private _livesLabel: objects.Label;\r\n\r\n        // CONSTRUCTOR ++++++++++++++++++++++\r\n        constructor() {\r\n            super();\r\n\r\n        }\r\n\r\n        // PUBLIC METHODS +++++++++++++++++++++\r\n\r\n        // Start Method\r\n        public start(): void {\r\n            // Set starting score\r\n            score = 0;\r\n\r\n            // add level lives\r\n            lives += 5;\r\n\r\n            // Set Enemy Count\r\n            this._batarangCount = 5;\r\n            this._spikeCount = 3;\r\n\r\n            // Instantiate Enemy array\r\n            this._batarangs = new Array<objects.Batarang>(this._batarangCount);\r\n            this._enemyCollision = new Array<managers.EnemyCollision>(this._batarangCount);\r\n\r\n            this._spikes = new Array<objects.Spikes>(this._spikeCount);\r\n            this._spikeCollision = new Array<managers.EnemyCollision>(this._spikeCount);\r\n            \r\n            // add world to the scene\r\n            this._background1 = new objects.World();\r\n            this.addChild(this._background1);\r\n                    //add secondary for smooth scroll\r\n            this._background2 = new objects.World();\r\n            this._background2.setSecondary();\r\n            this.addChild(this._background2);\r\n\r\n            // add player to the scene\r\n            this._player = new objects.Player();\r\n            this.addChild(this._player);\r\n\r\n            //add enemies to the scene\r\n            for (var i: number = 0; i < this._batarangCount; i++) {\r\n                this._batarangs[i] = new objects.Batarang();\r\n                this.addChild(this._batarangs[i]);\r\n                this._enemyCollision[i] = new managers.EnemyCollision(this._batarangs[i]);\r\n            }\r\n            \r\n            for (var i: number = 0; i < this._spikeCount; i++) {\r\n                this._spikes[i] = new objects.Spikes();\r\n                this.addChild(this._spikes[i]);\r\n                this._spikeCollision[i] = new managers.EnemyCollision(this._spikes[i]);\r\n            }\r\n\r\n            // add labels to scene\r\n            this._scoreLabel = new objects.Label(\"Score: \" + score + \" m\",\r\n                \"35px Consolas\",\r\n                \"#FFFFFF\",\r\n                50,\r\n                50,\r\n                false);\r\n            this.addChild(this._scoreLabel);\r\n            this._livesLabel = new objects.Label(\"Lives: \" + lives,\r\n                \"35px Consolas\",\r\n                \"#FFFFFF\",\r\n                config.Screen.WIDTH - 200,\r\n                50,\r\n                false);\r\n            this.addChild(this._livesLabel);\r\n\r\n            // add collision manager to the scene\r\n            this._collision = new managers.Collision(this._player);\r\n\r\n            // add this scene to the global stage container\r\n            stage.addChild(this);\r\n        }\r\n\r\n        // PLAY Scene updates here\r\n        public update(): void {\r\n            this._background1.update();\r\n            this._background2.update();\r\n\r\n            this._player.update();\r\n\r\n            score++;\r\n            this._scoreLabel.text = \"Score: \" + score + \" m\";\r\n\r\n            // check for collisions\r\n            //batarangs\r\n            for (var i = 0; i < this._batarangCount; i++) { //check all\r\n                if (this._collision.check(this._batarangs[i])) { //colliding with player avatar\r\n                    this._batarangs[i].isHittingPlayer = true;\r\n                    lives--;\r\n                    this._livesLabel.text = \"Lives: \" + lives;\r\n                } else {\r\n                    for (var j = 0; j < this._batarangCount; j++) {\r\n                        if (j != i && this._enemyCollision[j].check(this._batarangs[i])) {\r\n                            this._batarangs[i].isHittingBat = true;\r\n                            console.log(\"Bat on Bat collision: \");\r\n                        }\r\n                    }\r\n                }\r\n                this._batarangs[i].update();\r\n                this._batarangs[i].isHittingBat = false;\r\n                this._batarangs[i].isHittingPlayer = false;\r\n            }//for batarangs\r\n            \r\n            \r\n            \r\n            //spikes\r\n            for (var i = 0; i < this._spikeCount; i++) {\r\n                if (this._collision.check(this._spikes[i])) {\r\n                    this._spikes[i].isColliding = true;\r\n                    \r\n                    lives--;\r\n                    this._livesLabel.text = \"Lives: \" + lives;\r\n                } else {\r\n                    for (var j = 0; j < this._spikeCount; j++) {\r\n                        if (j != i && this._enemyCollision[j].check(this._batarangs[i])) {\r\n                            this._spikes[i].isColliding = true;\r\n                            //this._spikes[i].bounceX(); //bounce\r\n                        }\r\n                    }\r\n                }\r\n                this._spikes[i].update();\r\n                this._spikes[i].isColliding = false;\r\n            }//for spikes\r\n\r\n            if (lives <= 0) {\r\n                console.log(\"player ran out of lives\");\r\n                scene = config.Scene.END;\r\n                changeScene();\r\n            } else if (score >= 1000) {\r\n                console.log(\"transfer to level 3\");\r\n                // scene = config.Scene.LEVEL2;\r\n                // changeScene();\r\n            }\r\n        }\r\n\r\n\r\n        //EVENT HANDLERS ++++++++++++++++++++\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}