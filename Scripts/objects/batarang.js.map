{"version":3,"sources":["objects/batarang.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CAqDb;AArDD,WAAO,OAAO,EAAC,CAAC;IACZ,6DAA6D;IAC7D;QAA8B,4BAAkB;QAI5C,+CAA+C;QAC/C;YACI,kBAAM,UAAU,CAAC,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;YAEvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;QAED,gDAAgD;QAChD,gEAAgE;QACtD,+BAAY,GAAtB,UAAuB,KAAa;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjC,CAAC;QACL,CAAC;QAED,4BAA4B;QAClB,yBAAM,GAAhB,UAAiB,KAAa;YAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB;YACrE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,mBAAmB;YAEvE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC1E,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;QACnB,CAAC;QAGD,gDAAgD;QAChD,qCAAqC;QAC9B,yBAAM,GAAb;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAA,MAAM;QACX,CAAC,EAAA,UAAU;QAGX,kDAAkD;QAC3C,0BAAO,GAAd;YACI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACnC,CAAC,EAAA,SAAS;QAEd,eAAC;IAAD,CAlDA,AAkDC,CAlD6B,OAAO,CAAC,UAAU,GAkD/C;IAlDY,gBAAQ,WAkDpB,CAAA,CAAA,OAAO;AACZ,CAAC,EArDM,OAAO,KAAP,OAAO,QAqDb,CAAA,QAAQ","file":"objects/batarang.js","sourcesContent":["module objects {\r\n    // BATWING (ENEMY) CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class Batarang extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        public isColliding: boolean;\r\n\r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor() {\r\n            super(\"batarang\");\r\n\r\n            this._reset(this._rightBounds);\r\n            this.name = \"batarang\";\r\n\r\n            this.isColliding = false;\r\n        }\r\n\r\n        // PRIVATE METHODS +++++++++++++++++++++++++++++\r\n        // check to see if the left of the enemy is outside the viewport\r\n        protected _checkBounds(value: number): void {\r\n            if (this.x <= value || this.y >= this._bottomBounds) {\r\n                this._reset(this._topBounds);\r\n            }\r\n        }\r\n\r\n        // reset the enemy offscreen\r\n        protected _reset(value: number): void {\r\n            this._speed.y = Math.floor(Math.random() * 2) + 4; // between 4 and 6\r\n            this._speed.x = Math.floor(Math.random() * 10) - 5; // between -5 and 5\r\n\r\n            this.x = Math.floor(Math.random() * this._rightBounds) + this._leftBounds;\r\n            this.y = value;\r\n        }\r\n\r\n\r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        // scroll the enemy across the screen\r\n        public update(): void {\r\n            if (this.isColliding) {\r\n                this._reset(this._topBounds);\r\n            } else {\r\n                this._checkBounds(this._leftBounds);\r\n                this.y += this._speed.y;\r\n                this.x -= this._speed.x;\r\n            }//else\r\n        }//update()\r\n        \r\n        \r\n        //reverse the horizontal motion of object (bounce)\r\n        public bounceX(): void {\r\n            this._speed.x = -this._speed.x;\r\n        }//bounceX\r\n        \r\n    }//class\r\n}//module"],"sourceRoot":"/source/"}