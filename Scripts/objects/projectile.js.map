{"version":3,"sources":["objects/projectile.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CAoFb;AApFD,WAAO,OAAO,EAAC,CAAC;IACZ,4DAA4D;IAC5D;QAAgC,8BAAkB;QAS9C,+CAA+C;QAC/C;YACI,kBAAM,YAAY,CAAC,CAAC;YAEpB,cAAM,CAAC,SAAS,EAAE,CAAC;YACnB,0EAA0E;YAC1E,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;YACzB,IAAI,CAAC,CAAC,GAAI,aAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAE,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAE/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;QAED,gDAAgD;QAChD,gEAAgE;QACtD,iCAAY,GAAtB,UAAuB,KAAa;YAIhC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;QACL,CAAC;QAED,4BAA4B;QAClB,2BAAM,GAAhB;YACI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAExB,CAAC,EAAA,SAAS;QAGV,gDAAgD;QAChD,qCAAqC;QAC9B,2BAAM,GAAb;YACI,YAAY;YACZ,kBAAkB;YAClB,yDAAyD;YACzD,qBAAqB;YAErB,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,CAAC,CAAC;YAEvC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAA,CAAC;gBAClE,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5B,CAAC;QAGL,CAAC,EAAA,UAAU;QAEJ,yBAAI,GAAX,UAAY,OAAe,EAAE,OAAe;YACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QArEM,oBAAS,GAAW,CAAC,CAAC;QACtB,qBAAU,GAAY,KAAK,CAAC;QAC5B,qBAAU,GAAY,KAAK,CAAC;QA0EvC,iBAAC;IAAD,CAjFA,AAiFC,CAjF+B,OAAO,CAAC,UAAU,GAiFjD;IAjFY,kBAAU,aAiFtB,CAAA,CAAA,OAAO;AACZ,CAAC,EApFM,OAAO,KAAP,OAAO,QAoFb,CAAA,QAAQ","file":"objects/projectile.js","sourcesContent":["module objects {\r\n    // Spikes (ENEMY) CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class Projectile extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        public isColliding: boolean;\r\n        public _fired: boolean;\r\n        \r\n        static numSpikes: number = 0;\r\n        static resetLock1: boolean = false;\r\n        static resetLock2: boolean = false;\r\n\r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor() {\r\n            super(\"projectile\");\r\n\r\n            Spikes.numSpikes++;\r\n            //this._rightBounds += this._rightBounds + (Spikes.numSpikes * this.width)\r\n            this._reset();\r\n            this.name = \"projectile\";\r\n            this.y =  World.floor - this.height +3;  \r\n            \r\n            this._speed.x = 5;  \r\n            this._speed.y = .5;\r\n            this._rightBounds = config.Screen.WIDTH;\r\n            this._leftBounds = -this.width;\r\n\r\n            this.isColliding = false;\r\n            this._fired = false;\r\n        }\r\n\r\n        // PRIVATE METHODS +++++++++++++++++++++++++++++\r\n        // check to see if the left of the enemy is outside the viewport\r\n        protected _checkBounds(value: number): void {\r\n            \r\n            \r\n            \r\n            if (this.x <= value) {\r\n                this._reset();\r\n            }\r\n        }\r\n\r\n        // reset the enemy offscreen\r\n        protected _reset(): void {\r\n            this.x = this._leftBounds;\r\n            this._fired = false;\r\n            \r\n        }//reset()\r\n\r\n\r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        // scroll the enemy across the screen\r\n        public update(): void {\r\n            //if !_fired\r\n            //stay in position\r\n            //else if xpos > this._rightbounds, reset, _fired = false\r\n            //else increment xpos\r\n            \r\n            if ( (this.x < 0) && (!this._fired) ) { //if it is sitting on the left, unfired\r\n                //do nothing.\r\n            } else if (this.isColliding) { // if it has been fired and is colliding with something\r\n                this._reset();\r\n            } else if (this.x > this._rightBounds || this.y > this._bottomBounds){\r\n                this._reset();                \r\n            } else {\r\n                this.x += this._speed.x;\r\n                this.y += this._speed.y;\r\n            }\r\n            \r\n            \r\n        }//update()\r\n        \r\n        public fire(playerX: number, playerY: number): void {\r\n            this._fired = true;\r\n            this.x = playerX + 20;\r\n            this.y = playerY - 20;\r\n            this.update();\r\n        }\r\n        /*\r\n        //reverse the horizontal motion of object (bounce)\r\n        public bounceX(): void {\r\n            this._speed.x = -this._speed.x;\r\n        }//bounceX\r\n        */\r\n    }//class\r\n}//module"],"sourceRoot":"/source/"}