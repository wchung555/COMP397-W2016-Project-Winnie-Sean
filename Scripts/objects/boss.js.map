{"version":3,"sources":["objects/boss.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CAwFb;AAxFD,WAAO,OAAO,EAAC,CAAC;IACZ,0DAA0D;IAC1D;QAA0B,wBAAkB;QAexC,+CAA+C;QAC/C;YACI,kBAAM,SAAS,CAAC,CAAC;YAEjB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YAGnB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YAEZ,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;QAGjD,CAAC;QAED,gDAAgD;QAChD,gEAAgE;QACtD,2BAAY,GAAtB;YAEI,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACtB,KAAK,MAAM;oBACP,EAAE,CAAA,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC;wBAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACnC,CAAC;oBACD,KAAK,CAAC;gBAEV,KAAK,OAAO;oBACR,EAAE,CAAA,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAA,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACnC,CAAC;oBACD,KAAK,CAAC;gBAEV;oBACI,KAAK,CAAC;YACd,CAAC;QAEL,CAAC;QAED,4BAA4B;QAClB,qBAAM,GAAhB;YAEI,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QAE7B,CAAC,EAAA,SAAS;QAGV,gDAAgD;QAChD,qCAAqC;QAC9B,qBAAM,GAAb;YAEI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAGxB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,kBAAU,CAAC,aAAa,EAAE,CAAC;gBAC1C,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;YAC3B,CAAC;QAEL,CAAC,EAAA,UAAU;QAEJ,0BAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QA3EM,cAAS,GAAW,CAAC,CAAC;QACtB,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAY,KAAK,CAAC;QA4EvC,WAAC;IAAD,CArFA,AAqFC,CArFyB,OAAO,CAAC,UAAU,GAqF3C;IArFY,YAAI,OAqFhB,CAAA,CAAA,OAAO;AACZ,CAAC,EAxFM,OAAO,KAAP,OAAO,QAwFb,CAAA,QAAQ","file":"objects/boss.js","sourcesContent":["module objects {\r\n    // Boss (ENEMY) CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class Boss extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        private _health: number;\r\n        private _direction: string;\r\n        public isHittingPlayer: boolean;\r\n        public isHittingBat: boolean;\r\n        public projectileHit: boolean;\r\n        static numSpikes: number = 0;\r\n        static resetLock1: boolean = false;\r\n        static resetLock2: boolean = false;\r\n        \r\n        public isColliding: boolean;\r\n        \r\n        \r\n\r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor() {\r\n            super(\"Batwing\");\r\n\r\n            this._health = 100;\r\n            \r\n            \r\n            this._reset();\r\n            this.name = \"Batwing\";\r\n            this.y = 40;  \r\n            \r\n            this._speed.x = 3;  \r\n            this._rightBounds = config.Screen.WIDTH - this.width;\r\n            this._leftBounds = config.Screen.WIDTH * 0.4;\r\n\r\n            \r\n        }\r\n\r\n        // PRIVATE METHODS +++++++++++++++++++++++++++++\r\n        // check to see if the left of the enemy is outside the viewport\r\n        protected _checkBounds(): void {\r\n            \r\n            switch (this._direction) {\r\n                case \"left\":\r\n                    if(this.x <= this._leftBounds){\r\n                        this._speed.x = -this._speed.x;\r\n                    }\r\n                    break;\r\n                    \r\n                case \"right\":\r\n                    if(this.x >= this._rightBounds){\r\n                        this._speed.x = -this._speed.x;\r\n                    }\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n           \r\n        }\r\n\r\n        // reset the enemy offscreen\r\n        protected _reset(): void {\r\n            \r\n            this.x = config.Screen.WIDTH + 10;\r\n            this._direction = \"left\";           \r\n            \r\n        }//reset()\r\n\r\n\r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        // scroll the enemy across the screen\r\n        public update(): void {\r\n            \r\n            this._checkBounds();\r\n            this.x -= this._speed.x;\r\n            \r\n            \r\n            if (this.projectileHit) {\r\n                this._health - Projectile.readHitPoints();\r\n                this.x -= this._speed.x\r\n            } \r\n            \r\n        }//update()\r\n        \r\n        public checkHealth(): number {\r\n            return this._health;\r\n        }\r\n        \r\n        \r\n    }//class\r\n}//module"],"sourceRoot":"/source/"}