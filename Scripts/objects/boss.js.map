{"version":3,"sources":["objects/boss.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CA6Db;AA7DD,WAAO,OAAO,EAAC,CAAC;IACZ,0DAA0D;IAC1D;QAA0B,wBAAkB;QAYxC,+CAA+C;QAC/C;YACI,kBAAM,SAAS,CAAC,CAAC;YAEjB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YAGnB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YAEZ,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;QACjD,CAAC;QAED,gDAAgD;QAChD,gEAAgE;QACtD,2BAAY,GAAtB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC;QACL,CAAC;QAED,4BAA4B;QAClB,qBAAM,GAAhB;YACI,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QACtC,CAAC,EAAA,SAAS;QAEV,gDAAgD;QAChD,qCAAqC;QAC9B,qBAAM,GAAb;YACI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,OAAO,IAAI,kBAAU,CAAC,aAAa,EAAE,CAAC;gBAC3C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC/B,CAAC;QACL,CAAC,EAAA,UAAU;QAEJ,0BAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAnDM,cAAS,GAAW,CAAC,CAAC;QACtB,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAY,KAAK,CAAC;QAkDvC,WAAC;IAAD,CA1DA,AA0DC,CA1DyB,OAAO,CAAC,UAAU,GA0D3C;IA1DY,YAAI,OA0DhB,CAAA,CAAA,OAAO;AACZ,CAAC,EA7DM,OAAO,KAAP,OAAO,QA6Db,CAAA,QAAQ","file":"objects/boss.js","sourcesContent":["module objects {\r\n    // Boss (ENEMY) CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class Boss extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        private _health: number;\r\n        public isHittingPlayer: boolean;\r\n        public isHittingBat: boolean;\r\n        public projectileHit: boolean;\r\n        static numSpikes: number = 0;\r\n        static resetLock1: boolean = false;\r\n        static resetLock2: boolean = false;\r\n\r\n        public isColliding: boolean;\r\n\r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor() {\r\n            super(\"Batwing\");\r\n\r\n            this._health = 100;\r\n\r\n\r\n            this._reset();\r\n            this.name = \"Batwing\";\r\n            this.y = 40;\r\n\r\n            this._speed.x = 3;\r\n            this._rightBounds = config.Screen.WIDTH - this.width;\r\n            this._leftBounds = config.Screen.WIDTH * 0.4;\r\n        }\r\n\r\n        // PRIVATE METHODS +++++++++++++++++++++++++++++\r\n        // check to see if the left of the enemy is outside the viewport\r\n        protected _checkBounds(): void {\r\n            if (this.x <= this._leftBounds) {\r\n                this._speed.x = -3;\r\n            } else if (this.x >= this._rightBounds) {\r\n                this._speed.x = 3;\r\n            }\r\n        }\r\n\r\n        // reset the enemy offscreen\r\n        protected _reset(): void {\r\n            this.x = config.Screen.WIDTH + 10;\r\n        }//reset()\r\n\r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        // scroll the enemy across the screen\r\n        public update(): void {\r\n            this._checkBounds();\r\n            this.x -= this._speed.x;\r\n\r\n            if (this.projectileHit) {\r\n                this._health -= Projectile.readHitPoints();\r\n                this.projectileHit = false;\r\n            }\r\n        }//update()\r\n\r\n        public checkHealth(): number {\r\n            return this._health;\r\n        }\r\n    }//class\r\n}//module"],"sourceRoot":"/source/"}