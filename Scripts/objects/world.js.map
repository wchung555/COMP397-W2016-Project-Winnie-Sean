{"version":3,"sources":["objects/world.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CAqDb;AArDD,WAAO,OAAO,EAAC,CAAC;IACZ,mDAAmD;IACnD;QAA2B,yBAAkB;QAKzC,+CAA+C;QAC/C,eAAa,KAAa;YACtB,kBAAO,KAAK,CAAE,CAAC;YAEf,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;YACnB,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa;YAChC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACf,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,gEAAgE;QAClG,CAAC;QAID,+CAA+C;QAC/C,qEAAqE;QAC3D,4BAAY,GAAtB,UAAuB,KAAa;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,uDAAuD;YACxF,CAAC;QACL,CAAC;QAED,6BAA6B;QACnB,sBAAM,GAAhB,UAAiB,KAAa;YAC1B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;QACnB,CAAC;QAGD,gDAAgD;QAChD,kCAAkC;QAC3B,sBAAM,GAAb;YACI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,+BAA+B;YAClE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5B,CAAC;QAED,6FAA6F;QACrF,uHAAuH;QACvH,2EAA2E;QAC3E,wFAAwF;QACzF,4BAAY,GAAnB;YACI,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;YAC/B,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC;QAhDD,+CAA+C;QACxC,cAAQ,GAAW,CAAC,CAAC;QACrB,cAAQ,GAAW,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,WAAK,GAAW,GAAG,CAAC;QA8C/B,YAAC;IAAD,CAlDA,AAkDC,CAlD0B,OAAO,CAAC,UAAU,GAkD5C;IAlDY,aAAK,QAkDjB,CAAA;AACL,CAAC,EArDM,OAAO,KAAP,OAAO,QAqDb","file":"objects/world.js","sourcesContent":["module objects {\r\n    // WORLD CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class World extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        static resetVal: number = 0;\r\n        static boundVal: number = config.Screen.WIDTH;\r\n        static floor: number = 428;\r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor( level: string  ) {\r\n            super( level );\r\n            \r\n            World.resetVal = 0;\r\n            World.boundVal = config.Screen.WIDTH;\r\n            World.floor = 428;\r\n\r\n            this._speed.x = 5; //space speed\r\n            this._reset(0);\r\n            World.boundVal -= this.width; //set the value for checkbounds to be world width - canvas width\r\n        }\r\n        \r\n        \r\n\r\n        // PRIVATE METHODS ++++++++++++++++++++++++++++\r\n        // check to see if the left of the world is met the left of the scene\r\n        protected _checkBounds(value: number): void {\r\n            if (this.x <= value) {\r\n                this._reset(World.resetVal); //place at edge of other background which is now at x=0\r\n            }\r\n        }\r\n\r\n        // reset the space off-screen\r\n        protected _reset(value: number): void {\r\n            this.x = value;\r\n        }\r\n\r\n\r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        // scroll the space 5 px per frame\r\n        public update(): void {\r\n            this._checkBounds(World.boundVal); //use the boundary value option\r\n            this.x -= this._speed.x;\r\n        }\r\n        \r\n        //Change this instance to be the secondary value and adjust behavior of first object to suit.\r\n                //This method works like a setting to allow for two different background scrolling modes in the interest of code reuse.\r\n                //First mode is default; A single instance of an image is reset repeatedly.\r\n                //Second mode uses a second instance of world image to scroll next to it for smoothness.\r\n        public setSecondary(): void {\r\n            World.resetVal = this.width-10;\r\n            World.boundVal = -this.width;\r\n            this._reset(World.resetVal);\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}